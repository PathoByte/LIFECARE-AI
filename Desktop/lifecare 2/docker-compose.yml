version: '3.8'

services:
  # LifeCare AI Backend
  backend:
    build: .
    container_name: lifecare-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=sqlite:///./lifecare.db
      - SECRET_KEY=your-super-secret-key-change-in-production
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - API_V1_STR=/api/v1
      - PROJECT_NAME=LifeCare AI
      - BACKEND_CORS_ORIGINS=["http://localhost:3000", "http://localhost:8080", "https://your-domain.com"]
    volumes:
      - ./data:/app/data
      - ./models:/app/models
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # LifeCare AI Frontend (Production Build)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: lifecare-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api/v1
      - REACT_APP_WS_URL=ws://localhost:8000/ws

  # PostgreSQL Database (Optional - for production)
  # postgres:
  #   image: postgres:15
  #   container_name: lifecare-postgres
  #   environment:
  #     POSTGRES_DB: lifecare
  #     POSTGRES_USER: lifecare_user
  #     POSTGRES_PASSWORD: your_secure_password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped

  # Redis (Optional - for caching and sessions)
  # redis:
  #   image: redis:7-alpine
  #   container_name: lifecare-redis
  #   ports:
  #     - "6379:6379"
  #   restart: unless-stopped

# volumes:
#   postgres_data:

networks:
  default:
    name: lifecare-network